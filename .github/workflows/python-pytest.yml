name: PyTest

on:
  push:
    branches: [ main, devel ]
  pull_request:
    branches: [ main, devel ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        version: [cp38-cp38, cp39-cp39, cp310-cp310]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build containers
        env:
          PYTHON_VERSION: ${{ matrix.version }}
        run: |
          docker-compose build --build-arg ARCH=x86-64 \
                               --build-arg BASELINE=docker.io/smandra/hybridq-baseline:$PYTHON_VERSION \
                               hybridq
          docker tag hybridq:latest hybridq:${PYTHON_VERSION}
          docker save hybridq:${PYTHON_VERSION} > /tmp/hybridq_${PYTHON_VERSION}.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: hybridq_${{ matrix.version }}
          path: /tmp/hybridq_${{ matrix.version }}.tar
          retention-days: 1

  collect:
    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - id: set-matrix
      run: |
        NAMES=$(echo [$(cat tests/tests.py | grep -o -P '(?<=def )test.*(?=\()'  | awk '{print "\""$1"\"" }' | tr '\n' ',' | sed 's/,$//')])
        echo "::set-output name=matrix::${NAMES}"

  run:
    needs: [build, collect]

    runs-on: ubuntu-latest

    strategy:
      matrix:
        version: [cp38-cp38, cp39-cp39, cp310-cp310]
        name: ${{fromJson(needs.collect.outputs.matrix)}}

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: hybridq_${{ matrix.version }}
          path: /tmp

      - name: Load docker image
        env:
          PYTHON_VERSION: ${{ matrix.version }}
        run: |
          docker load --input /tmp/hybridq_${PYTHON_VERSION}.tar

      - name: Run test
        env:
          NAME: ${{ matrix.name }}
          PYTHON_VERSION: ${{ matrix.version }}
        run: |
          docker run --rm hybridq:${PYTHON_VERSION} \
            bash -c "python -m pytest -sv /opt/hybridq/tests/tests.py::$NAME"
